# 使用官方的 Debian 作为基础镜像
FROM debian:bullseye as builder
ARG NGINX_VERSION=1.27.3
# 安装依赖
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libssl-dev \
    wget \
    libpcre3 \
    libpcre3-dev \
    zlib1g-dev \
    git \
    openssl \
    cmake \
    curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir -p "/ssl" && cd /ssl && \
    openssl genrsa -out server.key 2048 && \
    openssl req -new -key server.key -out server.csr -subj "/C=CN/ST=Beijing/L=Beijing/O=MyCompany/OU=IT/CN=abc.tech/emailAddress=admin@abc.tech" && \
    openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt

WORKDIR /usr/src
RUN wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
    tar -zxvf nginx-${NGINX_VERSION}.tar.gz && \
    rm nginx-${NGINX_VERSION}.tar.gz

# 下载 Nginx 源码
WORKDIR /usr/src/nginx-${NGINX_VERSION}
RUN git  -c http.sslVerify=false clone https://github.com/openresty/headers-more-nginx-module && \
    git  -c http.sslVerify=false clone https://github.com/quictls/openssl

RUN ./configure \
    --prefix=/etc/nginx \
    --sbin-path=/usr/sbin/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --modules-path=/usr/lib/nginx/modules \
    --error-log-path=/var/log/nginx/error.log \
    --http-log-path=/var/log/nginx/access.log \
    --pid-path=/var/run/nginx.pid \
    --lock-path=/var/run/nginx.lock \
    --with-http_ssl_module \
    --with-http_v2_module \
    --with-http_v3_module \
    --with-openssl=./openssl \
    --with-openssl-opt="enable-tls1_3" \
    --with-cc-opt="-I/usr/local/include" \
    --with-ld-opt="-L/usr/local/lib" \
    --add-module=./headers-more-nginx-module && \
    make && \
    make install

RUN  cp ./openssl/.openssl/lib/libssl.a /usr/local/lib/ && \
    cp ./openssl/.openssl/lib/libcrypto.a  /usr/local/lib/

# 使用一个更小的基础镜像来运行 Nginx
FROM debian:bullseye-slim

# 安装运行时依赖
RUN apt-get update && \
    apt-get install -y \
    libpcre3 \
    zlib1g \
    libssl1.1 \
    && rm -rf /var/lib/apt/lists/*

# 复制构建好的 Nginx 和 BoringSSL
COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
COPY --from=builder /usr/local/lib/libssl.a /usr/local/lib/
COPY --from=builder /usr/local/lib/libcrypto.a /usr/local/lib/
COPY --from=builder /ssl /ssl

# 创建 Nginx 用户
RUN useradd -r -M nginx

# 复制 Nginx 配置文件
RUN mkdir -p /etc/nginx /var/log/nginx
COPY nginx.conf /etc/nginx/nginx.conf
# 暴露端口
EXPOSE 80 443 443/udp

# 启动 Nginx
CMD ["nginx", "-g", "daemon off;"]