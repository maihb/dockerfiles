# 第一阶段：编译阶段
FROM debian:bullseye-slim AS builder

# 安装必要的构建工具和依赖
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libssl-dev \
    wget \
    libpcre3 \
    libpcre3-dev \
    zlib1g-dev \
    git \
    make \
    openssl \
    cmake \
    golang-go \
    curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 下载并编译 quictls
WORKDIR /usr/src
RUN git -c http.sslVerify=false clone --depth=1 https://github.com/google/boringssl.git && \
    cd boringssl && \
    mkdir build && cd build && \
    cmake .. && \
    make 

# 下载并解压 Nginx 源码
WORKDIR /usr/src/nginx
RUN wget http://nginx.org/download/nginx-1.25.3.tar.gz && \
    tar -zxvf nginx-1.25.3.tar.gz

# 进入 Nginx 源码目录
# 配置编译选项并构建 Nginx
WORKDIR /usr/src/nginx/nginx-1.25.3
RUN ./configure \
    --prefix=/usr/local/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --with-debug \
    --with-http_v3_module \
    --with-http_v2_module \
    --with-cc-opt="-I../boringssl/include"   \
    --with-ld-opt="-L../boringssl/build/ssl  -L../boringssl/build/crypto" && \
    make && \
    make install

RUN mkdir -p "/ssl" && cd /ssl && \
    openssl genrsa -out server.key 2048 && \
    openssl req -new -key server.key -out server.csr -subj "/C=CN/ST=Beijing/L=Beijing/O=MyCompany/OU=IT/CN=abc.tech/emailAddress=admin@abc.tech" && \
    openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt

# 第二阶段：运行阶段
FROM debian:bullseye-slim
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    gnupg2 \
    ca-certificates \
    lsb-release \
    libssl-dev \
    debian-archive-keyring \
    zlib1g-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 复制编译好的 Nginx 和 quictls 动态库
COPY --from=builder /usr/local/nginx /usr/local/nginx
COPY --from=builder /usr/src/quictls/build/lib /usr/lib
COPY --from=builder /ssl /ssl

RUN mkdir -p /etc/nginx /var/log/nginx /var/cache/nginx && \
    ln -sf /usr/local/nginx/sbin/nginx /usr/sbin/nginx

# 创建 Nginx 用户
RUN useradd -r -M nginx

# 复制 Nginx 配置文件
COPY nginx.conf /etc/nginx/nginx.conf

# 暴露端口
EXPOSE 80
EXPOSE 443
EXPOSE 443/udp

# 设置工作目录并启动 Nginx
WORKDIR /
CMD ["nginx", "-g", "daemon off;"]
